// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String?
  projects  Project[] // A user can have many projects
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id        String   @id @default(cuid())
  name      String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  boards    Board[]  // A project can have many boards
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Board {
  id        String   @id @default(cuid())
  name      String
  order     Int      // To determine the position of the board
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  tasks     Task[]   // A board can have many tasks
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  order       Int      // To determine the position of the task within a board
  board       Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
  boardId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
